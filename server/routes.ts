export const routeGroups = [
  {
    basePath: '/api/auth',
    controllerPath: './http/auth/controller',
    routes: [
      {
        method: 'post',
        path: '/register',
        controller: 'register',
        body: ['first_name', 'last_name', 'email', 'password', '?ref'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/login',
        controller: 'login',
        body: ['email', 'password'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/login/wallet',
        controller: 'loginWithWallet',
        body: ['walletAddress'],
        isGuest: true,
      },
      {
        method: 'get',
        path: '/login/chat',
        controller: 'loginChat',
        query: ['email', 'password', 'first_name', 'last_name'],
        isGuest: true,
      },
      {
        method: 'get',
        path: '/nonce',
        controller: 'generateNonce',
        isGuest: true,
      },
      {
        method: 'post',
        path: '/wallet/verify',
        controller: 'verifyMessage',
        body: ['message', 'signature', 'walletAddress'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/login/otp',
        controller: 'loginOtp',
        body: ['uuid', 'otp'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/login/otp/resend',
        controller: 'resendOtp',
        body: ['uuid', 'secret'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/logout',
        controller: 'logout',
      },
      {
        method: 'get',
        path: '/profile',
        controller: 'profile',
      },
      {
        method: 'put',
        path: '/profile',
        controller: 'update',
        body: [
          '?first_name',
          '?last_name',
          '?email',
          '?metadata',
          '?avatar',
          '?current_password',
          '?new_password',
        ],
      },
      {
        method: 'post',
        path: '/reset',
        controller: 'resetPassword',
        body: ['email'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/verifyreset',
        controller: 'verifyResetPassword',
        body: ['token'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/verify/email/send',
        controller: 'sendEmailVerification',
        body: ['email'],
      },
      {
        method: 'post',
        path: '/verify/email/token',
        controller: 'verifyEmail',
        body: ['token'],
      },
    ],
  },
  {
    basePath: '/api/upload',
    controllerPath: './http/auth/controller',
    routes: [
      {
        method: 'post',
        path: '',
        body: ['dir', 'files', '?oldImagePath'],
        controller: 'upload',
      },
    ],
  },
  {
    basePath: '/api/settings',
    controllerPath: './http/settings/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        isGuest: true,
      },
      {
        method: 'get',
        path: '/extensions',
        controller: 'extensions',
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/exchange/settings',
    controllerPath: './http/exchange/settings/controller',
    routes: [
      {
        method: 'get',
        path: '/check/connection',
        controller: 'checkConnection',
        permission: 'Check Exchange Connection',
        query: ['exchange'],
      },
      {
        method: 'get',
        path: '/fetch/markets',
        controller: 'fetchMarkets',
        permission: 'Fetch Exchange Markets',
        query: ['exchange'],
      },
      {
        method: 'get',
        path: '/fetch/currencies',
        controller: 'fetchCurrencies',
        permission: 'Fetch Exchange Currencies',
        query: ['exchange'],
      },
      {
        method: 'post',
        path: '/save/markets',
        controller: 'saveMarkets',
        body: ['symbols', 'currencies', '?exchange'],
        permission: 'Save Exchange Markets',
      },
      {
        method: 'get',
        path: '/get/details',
        controller: 'getDetails',
        permission: 'Get Exchange Details',
      },
      {
        method: 'post',
        path: '/verify/license',
        controller: 'verify',
        body: ['productId', '?purchaseCode', '?envatoUsername'],
        permission: 'Verify Exchange License',
      },
      {
        method: 'post',
        path: '/activate/license',
        controller: 'activate',
        body: ['productId', 'purchaseCode', 'envatoUsername'],
        permission: 'Activate Exchange License',
      },
    ],
  },
  {
    basePath: '/api/profile',
    controllerPath: './http/profile/controller',
    routes: [
      {
        method: 'post',
        path: '/generateOTPSecret',
        controller: 'generateOTPSecret',
        body: ['type', '?email', '?phoneNumber'],
      },
      {
        method: 'post',
        path: '/verifyOTP',
        controller: 'verifyOTP',
        body: ['otp', 'secret', 'type'],
      },
      {
        method: 'post',
        path: '/saveOTP',
        controller: 'saveOTP',
        body: ['secret', 'type'],
      },
      {
        method: 'post',
        path: '/toggleOtp',
        controller: 'toggleOtp',
        body: ['status'],
      },
    ],
  },
  {
    basePath: '/api/blog/authors',
    controllerPath: './http/blog/authors/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['?status', '?posts'],
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        query: ['?posts'],
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['status'],
        permission: 'Edit Authors',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Authors',
      },
    ],
  },
  {
    basePath: '/api/blog/posts',
    controllerPath: './http/blog/posts/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['?category', '?tag', '?status'],
        isGuest: true,
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['post'],
      },
      {
        method: 'put',
        path: '/:slug',
        controller: 'update',
        params: ['slug'],
        body: ['post'],
      },
      {
        method: 'put',
        path: '/:id/status',
        controller: 'updateStatus',
        params: ['id'],
        body: ['status'],
        permission: 'Edit Blog Posts',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Blog Posts',
      },
    ],
  },
  {
    basePath: '/api/blog/categories',
    controllerPath: './http/blog/categories/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['?posts'],
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        query: ['?posts'],
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['category'],
        permission: 'Create Categories',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['category'],
        permission: 'Edit Categories',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Categories',
      },
    ],
  },
  {
    basePath: '/api/blog/tags',
    controllerPath: './http/blog/tags/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['?posts'],
      },
      {
        method: 'get',
        path: '/:slug',
        controller: 'show',
        params: ['slug'],
        query: ['?posts'],
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['tag'],
        permission: 'Create Tags',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['tag'],
        permission: 'Edit Tags',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Tags',
      },
    ],
  },
  {
    basePath: '/api/notifications',
    controllerPath: './http/notifications/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['notification'],
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
      },
    ],
  },
  {
    basePath: '/api/admin/notifications',
    controllerPath: './http/admin/notifications/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View Notifications',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        permission: 'View Notifications',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['data'],
        permission: 'Edit Notifications',
      },
      {
        method: 'get',
        path: '/email/test',
        controller: 'testMailer',
        query: ['name', 'email'],
        permission: 'Test Emailer',
      },
    ],
  },
  {
    basePath: '/api/currencies',
    controllerPath: './http/currencies/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        isGuest: true,
      },
      {
        method: 'get',
        path: '/:currencyId',
        controller: 'show',
        params: ['currencyId'],
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/admin/currencies',
    controllerPath: './http/admin/currencies/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'Access Fiat Currencies Management',
      },
      {
        method: 'put',
        path: '/update-status',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit Currencies',
      },
    ],
  },
  {
    basePath: '/api/exchange/binary/orders',
    controllerPath: './http/exchange/binary/orders/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['?type'],
      },
      {
        method: 'get',
        path: '/:uuid',
        controller: 'show',
        params: ['uuid'],
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['order'],
      },
      {
        method: 'del',
        path: '/:uuid',
        controller: 'cancel',
        params: ['uuid'],
        body: ['percentage'],
      },
    ],
  },
  {
    basePath: '/api/exchange/chart',
    controllerPath: './http/exchange/chart/controller',
    routes: [
      {
        method: 'get',
        path: '/historical',
        controller: 'getHistorical',
        query: ['symbol', 'interval', 'from', 'to', 'duration'],
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/exchange/currencies',
    controllerPath: './http/exchange/currencies/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        isGuest: true,
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/admin/exchange/currencies',
    controllerPath: './http/admin/exchange/currencies/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
      },
      {
        method: 'put',
        path: '/update/:id',
        controller: 'update',
        params: ['id'],
        body: ['data'],
        permission: 'Edit Exchange Currencies',
      },
      {
        method: 'put',
        path: '/update-status',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit Exchange Currencies',
      },
      {
        method: 'put',
        path: '/update-chains/:id',
        controller: 'updateChains',
        params: ['id'],
        body: ['chains'],
        permission: 'Edit Exchange Currencies',
      },
    ],
  },
  {
    basePath: '/api/exchange/markets',
    controllerPath: './http/exchange/markets/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        isGuest: true,
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        isGuest: true,
      },
      {
        method: 'get',
        path: '/:currency/:pair/ticker',
        controller: 'ticker',
        params: ['currency', 'pair'],
        isGuest: true,
      },
      {
        method: 'get',
        path: '/:currency/:pair/orderbook',
        controller: 'orderbook',
        params: ['currency', 'pair'],
        query: ['limit'],
        isGuest: true,
      },
      {
        method: 'get',
        path: '/tickers/all',
        controller: 'tickers',
        isGuest: true,
      },
      {
        method: 'put',
        path: '/update/:id',
        controller: 'update',
        params: ['id'],
        body: ['metadata', 'is_trending', 'is_hot'],
        permission: 'Edit Exchange Markets',
      },
      {
        method: 'put',
        path: '/update-status',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit Exchange Markets',
      },
    ],
  },
  {
    basePath: '/api/exchange/orders',
    controllerPath: './http/exchange/orders/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
      },
      {
        method: 'get',
        path: '/:uuid',
        controller: 'show',
        params: ['uuid'],
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['symbol', 'type', 'side', 'amount', 'price'],
      },
      {
        method: 'del',
        path: '/:uuid',
        controller: 'cancel',
        params: ['uuid'],
      },
      {
        method: 'get',
        path: '/:uuid/status',
        controller: 'check',
        params: ['uuid'],
      },
    ],
  },
  {
    basePath: '/api/exchange/watchlist',
    controllerPath: './http/exchange/watchlist/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['symbol', 'type'],
      },
    ],
  },
  {
    basePath: '/api/investment',
    controllerPath: './http/investment/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        params: [],
        query: [],
      },
      {
        method: 'get',
        path: '/uuid/:uuid',
        controller: 'show',
        params: ['uuid'],
      },
      {
        method: 'get',
        path: '/user',
        controller: 'user',
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['plan', 'amount'],
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['data'],
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
      },
      {
        method: 'put',
        path: '/:uuid/cancel',
        controller: 'cancel',
        params: ['uuid'],
      },
    ],
  },
  {
    basePath: '/api/investment-plan',
    controllerPath: './http/investment/plan/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
      },
    ],
  },
  {
    basePath: '/api/admin/investment-plan',
    controllerPath: './http/admin/investment/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View Investment Plans',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        permission: 'View Investment Plans',
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['plan'],
        permission: 'Create Investment Plans',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['plan'],
        permission: 'Edit Investment Plans',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Investment Plans',
      },
      {
        method: 'put',
        path: '/update-status',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit Investment Plans',
      },
    ],
  },
  {
    basePath: '/api/admin/kyc',
    controllerPath: './http/admin/kyc/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View KYC',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        permission: 'View KYC',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete KYC',
      },
      {
        method: 'put',
        path: '/:id/status',
        controller: 'updateStatus',
        params: ['id'],
        body: ['status', '?message'],
        permission: 'Edit KYC',
      },
    ],
  },
  {
    basePath: '/api/kyc',
    controllerPath: './http/kyc/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['templateId', 'template', 'level'],
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['updatedData'],
      },
    ],
  },
  {
    basePath: '/api/admin/kyc-template',
    controllerPath: './http/admin/kyc-template/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View KYC Templates',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        permission: 'View KYC Templates',
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['data'],
        permission: 'Create KYC Templates',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['data'],
        permission: 'Edit KYC Templates',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete KYC Templates',
      },
      {
        method: 'put',
        path: '/update-status',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit KYC Templates',
      },
    ],
  },
  {
    basePath: '/api/kyc-template',
    controllerPath: './http/kyc-template/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
      },
    ],
  },
  {
    basePath: '/api/admin/pages',
    controllerPath: './http/admin/pages/controller',
    routes: [
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['data'],
        permission: 'Create Pages',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['data'],
        permission: 'Edit Pages',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Pages',
      },
    ],
  },
  {
    basePath: '/api/pages',
    controllerPath: './http/pages/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        isGuest: true,
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/admin/support/tickets',
    controllerPath: './http/admin/support/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View Support Tickets',
      },
      {
        method: 'get',
        path: '/:ticketId',
        controller: 'show',
        params: ['ticketId'],
        permission: 'View Support Tickets',
      },
      {
        method: 'put',
        path: '/open/:ticketId',
        controller: 'open',
        params: ['ticketId'],
        permission: 'Edit Support Tickets',
      },
      {
        method: 'put',
        path: '/assign/:ticketId',
        controller: 'assign',
        params: ['ticketId'],
        permission: 'Edit Support Tickets',
      },
      {
        method: 'del',
        path: '/:ticketId',
        controller: 'delete',
        params: ['ticketId'],
        permission: 'Delete Support Tickets',
      },
    ],
  },
  {
    basePath: '/api/support/chat',
    controllerPath: './http/support/chat/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['ticket'],
      },
      {
        method: 'post',
        path: '',
        controller: 'send',
        body: ['ticket', 'message', 'isSupport'],
      },
      {
        method: 'post',
        path: '/metadata',
        controller: 'getMetadata',
        body: ['url'],
      },
    ],
  },
  {
    basePath: '/api/support/tickets',
    controllerPath: './http/support/tickets/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
      },
      {
        method: 'get',
        path: '/:ticketId',
        controller: 'show',
        params: ['ticketId'],
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['ticket'],
      },
      {
        method: 'put',
        path: '/close/:ticketId',
        controller: 'close',
        params: ['ticketId'],
      },
    ],
  },
  {
    basePath: '/api/wallets/fiat',
    controllerPath: './http/wallets/fiat/controller',
    routes: [
      {
        method: 'get',
        path: '/deposit/methods',
        controller: 'depositMethods',
      },
      {
        method: 'get',
        path: '/deposit/methods/:id',
        controller: 'depositMethod',
        params: ['id'],
      },
      {
        method: 'get',
        path: '/deposit/gateways',
        controller: 'depositGateways',
      },
      {
        method: 'get',
        path: '/deposit/gateways/:id',
        controller: 'depositGateway',
        params: ['id'],
      },
      {
        method: 'get',
        path: '/withdraw/methods',
        controller: 'withdrawMethods',
      },
      {
        method: 'get',
        path: '/withdraw/methods/:id',
        controller: 'withdrawMethod',
        params: ['id'],
      },
      {
        method: 'post',
        path: '/deposit',
        controller: 'deposit',
        body: ['transaction', 'currency'],
      },
      {
        method: 'post',
        path: '/withdraw',
        controller: 'withdraw',
        body: ['wallet', 'methodId', 'amount', 'total', 'custom_data'],
      },
      {
        method: 'post',
        path: '/deposit/method',
        controller: 'customDeposit',
        body: ['wallet', 'methodId', 'amount', 'total', 'custom_data'],
      },
    ],
  },
  {
    basePath: '/api/wallets/spot',
    controllerPath: './http/wallets/spot/controller',
    routes: [
      {
        method: 'get',
        path: '/:currency',
        controller: 'index',
        params: ['currency'],
      },
      {
        method: 'post',
        path: '/:currency',
        controller: 'store',
        params: ['currency'],
      },
      {
        method: 'get',
        path: '/transactions/:trx',
        controller: 'transactions',
        params: ['trx'],
      },
      {
        method: 'post',
        path: '/deposit',
        controller: 'deposit',
        body: ['wallet_id', 'trx', 'chain'],
      },
      {
        method: 'post',
        path: '/deposit/verify/:trx',
        controller: 'depositVerify',
        params: ['trx'],
      },
      {
        method: 'post',
        path: '/deposit/cancel/:trx',
        controller: 'depositCancel',
        params: ['trx'],
      },
      {
        method: 'post',
        path: '/withdraw',
        controller: 'withdraw',
        body: ['currency', 'chain', 'amount', 'address', '?memo'],
      },
    ],
  },
  {
    basePath: '/api/wallets',
    controllerPath: './http/wallets/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['?transactions'],
      },
      {
        method: 'get',
        path: '/wallet',
        controller: 'show',
        query: ['uuid'],
      },
      {
        method: 'get',
        path: '/fetch',
        controller: 'fetch',
        query: ['currency', 'type'],
      },
      {
        method: 'get',
        path: '/fetch-type',
        controller: 'fetchType',
        query: ['type', 'transactions'],
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['currency', 'type'],
      },
      {
        method: 'get',
        path: '/balance',
        controller: 'balance',
        query: ['uuid'],
      },
      {
        method: 'post',
        path: '/transfer',
        controller: 'transfer',
        body: ['currency', 'type', 'amount', 'to'],
      },
    ],
  },
  {
    basePath: '/api/admin/wallets/transactions',
    controllerPath: './http/admin/wallets/transactions/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: [
          '?user',
          '?type',
          '?status',
          '?wallet',
          '?walletType',
          '?basic',
        ],
        permission: 'View Wallets Transactions',
      },
    ],
  },
  {
    basePath: '/api/wallets/transactions',
    controllerPath: './http/wallets/transactions/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['?type', '?status', '?wallet', '?walletType', '?basic'],
      },
      {
        method: 'get',
        path: '/:referenceId',
        controller: 'show',
        params: ['referenceId'],
      },
    ],
  },
  {
    basePath: '/api/admin/exchange/orders',
    controllerPath: './http/admin/exchange/orders/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: ['?user', '?type', '?status', '?side', '?currency'],
        permission: 'View Exchange Orders',
      },
      {
        method: 'get',
        path: '/:uuid',
        controller: 'show',
        params: ['uuid'],
        permission: 'View Exchange Orders',
      },
    ],
  },
  {
    basePath: '/api/admin/deposit/gateways',
    controllerPath: './http/admin/deposit/gateways/controller',
    routes: [
      {
        method: 'put',
        path: '/update/:id',
        controller: 'update',
        params: ['id'],
        body: ['data'],
        permission: 'Edit Deposit Gateways',
      },
      {
        method: 'put',
        path: '/update-status',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit Deposit Gateways',
      },
    ],
  },
  {
    basePath: '/api/admin/deposit/methods',
    controllerPath: './http/admin/deposit/methods/controller',
    routes: [
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['data'],
        permission: 'Create Deposit Methods',
      },
      {
        method: 'put',
        path: '/update/:id',
        controller: 'update',
        params: ['id'],
        body: ['data'],
        permission: 'Edit Deposit Methods',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Deposit Methods',
      },
      {
        method: 'put',
        path: '/update-status',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit Deposit Methods',
      },
    ],
  },
  {
    basePath: '/api/admin/withdraw/methods',
    controllerPath: './http/admin/withdraw/methods/controller',
    routes: [
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['data'],
        permission: 'Create Withdraw Methods',
      },
      {
        method: 'put',
        path: '/update/:id',
        controller: 'update',
        params: ['id'],
        body: ['data'],
        permission: 'Edit Withdraw Methods',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Withdraw Methods',
      },
      {
        method: 'put',
        path: '/update-status',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit Withdraw Methods',
      },
    ],
  },
  {
    basePath: '/api/admin/wallets',
    controllerPath: './http/admin/wallets/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        query: [
          '?filter',
          '?perPage',
          '?page',
          '?user',
          '?type',
          '?hideSmallBalances',
        ],
        permission: 'View Wallets',
      },
      {
        method: 'get',
        path: '/:uuid',
        controller: 'show',
        params: ['uuid'],
        permission: 'View Wallets',
      },
      {
        method: 'post',
        path: '/update-balance',
        controller: 'updateBalance',
        body: ['uuid', 'type', 'amount'],
        permission: 'Edit Wallets',
      },
      {
        method: 'put',
        path: '/transactions/update-status',
        controller: 'updateTransactionStatus',
        body: ['referenceId', 'status', '?message'],
        permission: 'Edit Wallets',
      },
      {
        method: 'post',
        path: '/withdrawal/approve/:uuid',
        controller: 'approveSpotWalletWithdrawal',
        params: ['uuid'],
        permission: 'Edit Wallets',
      },
      {
        method: 'post',
        path: '/withdrawal/reject/:uuid',
        controller: 'rejectSpotWalletWithdrawal',
        params: ['uuid'],
        body: ['message'],
        permission: 'Edit Wallets',
      },
    ],
  },
  {
    basePath: '/api/admin/permissions',
    controllerPath: './http/admin/permissions/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View Permissions',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        permission: 'View Permissions',
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['permission'],
        permission: 'Create Permissions',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['permission'],
        permission: 'Edit Permissions',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Permissions',
      },
    ],
  },
  {
    basePath: '/api/admin/roles',
    controllerPath: './http/admin/roles/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View Roles',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        permission: 'View Roles',
      },
      {
        method: 'post',
        path: '',
        controller: 'store',
        body: ['role'],
        permission: 'Create Roles',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['role'],
        permission: 'Edit Roles',
      },
      {
        method: 'del',
        path: '/:id',
        controller: 'delete',
        params: ['id'],
        permission: 'Delete Roles',
      },
      {
        method: 'del',
        path: '/delete/bulk',
        controller: 'deleteBulk',
        body: ['ids'],
        permission: 'Delete Roles',
      },
      {
        method: 'post',
        path: '/:id/sync',
        controller: 'syncPermissions',
        params: ['id'],
        body: ['permissionIds'],
        permission: 'Edit Roles',
      },
    ],
  },
  {
    basePath: '/api/admin/settings',
    controllerPath: './http/admin/settings/controller',
    routes: [
      {
        method: 'put',
        path: '',
        controller: 'update',
        body: ['data'],
        permission: 'Edit Settings',
      },
      {
        method: 'put',
        path: '/locales',
        controller: 'editLocale',
        body: ['code', 'updates'],
        permission: 'Edit Settings',
      },
      {
        method: 'put',
        path: '/locales/status',
        controller: 'localeStatus',
        body: ['code', 'status'],
        permission: 'Edit Settings',
      },
      {
        method: 'post',
        path: '/locales/translate',
        controller: 'localeTranslate',
        body: ['keys', 'targetLang'],
        permission: 'Edit Settings',
      },
    ],
  },
  {
    basePath: '/api/admin/system',
    controllerPath: './http/admin/system/controller',
    routes: [
      {
        method: 'get',
        path: '/server-details',
        controller: 'getServerDetails',
        permission: 'View Server',
      },
      {
        method: 'get',
        path: '/extensions',
        controller: 'index',
        permission: 'View Extensions',
      },
      {
        method: 'post',
        path: '/extensions/status',
        controller: 'updateStatus',
        body: ['productId', 'status'],
        permission: 'Edit Extensions',
      },
      {
        method: 'post',
        path: '/check-latest-version',
        controller: 'checkLatestVersion',
        body: ['productId'],
        permission: 'Edit Extensions',
      },
      {
        method: 'post',
        path: '/check-update',
        controller: 'checkUpdate',
        body: ['productId', 'currentVersion'],
        permission: 'Edit Extensions',
      },
      {
        method: 'post',
        path: '/verify/license',
        controller: 'verifyLicense',
        body: ['productId', '?purchaseCode', '?envatoUsername'],
        permission: 'Edit Extensions',
      },
      {
        method: 'post',
        path: '/activate/license',
        controller: 'activateLicense',
        body: ['productId', 'purchaseCode', 'envatoUsername'],
        permission: 'Edit Extensions',
      },
      {
        method: 'post',
        path: '/download-update',
        controller: 'downloadUpdate',
        body: ['productId', 'updateId', 'version', 'product', '?type'],
        permission: 'Edit Extensions',
      },
      {
        method: 'get',
        path: '/get-product/:name',
        controller: 'getProduct',
        params: ['name'],
        permission: 'Edit Extensions',
      },
      {
        method: 'post',
        path: '/navigation',
        controller: 'updateNavigation',
        body: ['data'],
        permission: 'Edit Navigation',
      },
    ],
  },
  {
    basePath: '/api/admin/users',
    controllerPath: './http/admin/users/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View Users',
        query: ['?filter', '?perPage', '?page'],
      },
      {
        method: 'get',
        path: '/fetch/all',
        controller: 'fetch',
        permission: 'View Users',
      },
      {
        method: 'get',
        path: '/analytics/all',
        controller: 'analytics',
        permission: 'View Users',
      },
      {
        method: 'get',
        path: '/:uuid',
        controller: 'show',
        params: ['uuid'],
        permission: 'View Users',
      },
      {
        method: 'put',
        path: '/:uuid',
        controller: 'update',
        params: ['uuid'],
        body: ['?first_name', '?last_name', '?email', '?role_id'],
        permission: 'Edit Users',
      },
      {
        method: 'del',
        path: '/:uuid',
        controller: 'delete',
        params: ['uuid'],
        permission: 'Delete Users',
      },
      {
        method: 'del',
        path: '/delete/bulk',
        controller: 'deleteBulk',
        body: ['users'],
        permission: 'Delete Users',
      },
      {
        method: 'put',
        path: '/update-status/bulk',
        controller: 'updateStatus',
        body: ['users', 'status'],
        permission: 'Edit Users',
      },
    ],
  },
  {
    basePath: '/api/frontend',
    controllerPath: './http/frontend/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/theme',
    controllerPath: './http/frontend/controller',
    routes: [
      {
        method: 'get',
        path: '/html',
        query: ['path', '?id'],
        controller: 'html',
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/admin/frontend',
    controllerPath: './http/admin/frontend/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'index',
        permission: 'View Frontend Sections',
      },
      {
        method: 'get',
        path: '/:id',
        controller: 'show',
        params: ['id'],
        permission: 'View Frontend Sections',
      },
      {
        method: 'put',
        path: '/:id',
        controller: 'update',
        params: ['id'],
        body: ['section'],
        permission: 'Edit Frontend Sections',
      },
      {
        method: 'put',
        path: '/status/bulk',
        controller: 'updateStatus',
        body: ['ids', 'status'],
        permission: 'Edit Frontend Sections',
      },
    ],
  },
  {
    basePath: '/api/cron/wallets/spot',
    controllerPath: './http/wallets/spot/controller',
    routes: [
      {
        method: 'get',
        path: '/deposit',
        controller: 'depositCron',
        isGuest: true,
      },
      {
        method: 'get',
        path: '/withdraw',
        controller: 'withdrawCron',
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/cron/investment',
    controllerPath: './http/investment/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'cron',
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/cron/binary/orders',
    controllerPath: './http/exchange/binary/orders/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'cron',
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/cron/exchange/currencies',
    controllerPath: './http/exchange/currencies/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'cron',
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/cron/fiat/currencies',
    controllerPath: './http/currencies/controller',
    routes: [
      {
        method: 'get',
        path: '',
        controller: 'cron',
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/admin/theme',
    controllerPath: './http/admin/theme/controller',
    routes: [
      {
        method: 'post',
        path: '/info',
        controller: 'info',
        isGuest: true,
      },
      {
        method: 'post',
        path: '/get-language',
        controller: 'getLanguage',
        body: ['lang'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/get-sections',
        controller: 'getSections',
        body: ['sections', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/load-modules',
        controller: 'loadModules',
        isGuest: true,
      },
      {
        method: 'post',
        path: '/actions',
        controller: 'projectActions',
        body: [
          'action',
          '?project',
          '?part',
          '?index',
          '?lastChunk',
          '?files',
          '?dir',
        ],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/check-icon-fonts',
        controller: 'checkIconFonts',
        body: ['fonts', 'project', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/media-check-items',
        controller: 'mediaCheckItems',
        body: ['dir', 'items'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/get-pages',
        controller: 'getPages',
        body: ['pages', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/crop',
        controller: 'cropImage',
        body: ['data', 'destination', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/media-upload',
        controller: 'mediaUpload',
        body: ['dir', 'files'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/media-add-to-project',
        controller: 'mediaAddToProject',
        body: ['dir', 'fileName', 'destination'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/crop-media',
        controller: 'cropMedia',
        body: ['data', 'dir', '?resize'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/add-video-preview',
        controller: 'addVideoPreview',
        body: ['previews', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/media-add-items-by-urls',
        controller: 'mediaAddItemsByUrls',
        body: ['urls', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/export-project',
        controller: 'exportProject',
        body: ['dir', 'name'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/extract-zip',
        controller: 'extractZip',
        body: ['destination', 'zip'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/generate-robots-txt',
        controller: 'generateRobotsTxt',
        body: ['settings', 'path'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/generate-sitemap',
        controller: 'generateSitemap',
        body: ['settings', 'pages', 'path'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/copy-font-to-project',
        controller: 'copyFontToProject',
        body: ['source', 'project', 'destination', 'file'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/copy-page-preview',
        controller: 'copyPagePreview',
        body: ['url', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/copy-section-preview',
        controller: 'copySectionPreview',
        body: ['url', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/delete-project-files',
        controller: 'deleteProjectFiles',
        body: ['files', 'path'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/mailform-get-address',
        controller: 'mailformGetAddress',
        body: ['dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/mailform-set-address',
        controller: 'mailformSetAddress',
        body: ['dir', 'destination'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/move-file',
        controller: 'moveFile',
        body: ['sourceFile', 'destination'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/save-project-file',
        controller: 'saveProjectFile',
        body: ['path', 'content'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/template-import',
        controller: 'templateImport',
        body: ['template', 'dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/update-icon-fonts',
        controller: 'updateIconFonts',
        body: ['fonts'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/update-settings',
        controller: 'updateSystemSettings',
        body: ['config'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/upload-favicon',
        controller: 'uploadFavicon',
        body: ['dir'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/upload-page-preview',
        controller: 'uploadPagePreview',
        body: ['dir', 'path'],
        isGuest: true,
      },
      {
        method: 'post',
        path: '/upload-section-preview',
        controller: 'uploadSectionPreview',
        body: ['dir', 'path'],
        isGuest: true,
      },
    ],
  },
  {
    basePath: '/api/ipn',
    controllerPath: './http/ipn/controller',
    routes: [
      {
        method: 'post',
        path: '/stripe',
        controller: 'stripe',
        body: ['amount', 'currency', 'taxAmount', 'flutter'],
      },
      {
        method: 'post',
        path: '/stripe/verify',
        controller: 'stripeVerify',
        body: ['sessionId'],
      },
    ],
  },
]
